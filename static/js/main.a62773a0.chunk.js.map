{"version":3,"sources":["components/App/App.styled.jsx","components/Form/Form.styled.jsx","components/Form/Form.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","components/ContactList/ContactList.styled.jsx","components/ContactList/ContactList.jsx","components/App/App.js","index.js"],"names":["Section","styled","div","FormSection","Forms","form","Label","label","Input","input","Button","button","Form","state","contacts","name","number","setForm","e","currentTarget","value","setState","handelSubmit","preventDefault","props","getValue","resetForm","onSubmit","this","type","pattern","title","onChange","required","Component","Filter","filter","List","li","Span","span","ContactList","onDelete","map","contact","onClick","App","id","addContact","uuidv4","searchName","cont","includes","messege","alert","deleteContact","contactsName","prevState","changeFilter","getVisibleContact","normalizeFilter","toLowerCase","localStorage","getItem","parseContacts","JSON","parse","prevProps","setItem","stringify","visibleContact","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a62773a0.chunk.js","sourcesContent":["import styled from '@emotion/styled';\r\n\r\nexport const Section = styled.div`\r\nmargin-left: 100px;\r\n`;","import styled from '@emotion/styled';\r\n\r\nexport const FormSection = styled.div`\r\nwidth: 500px;\r\nborder: 2px solid black;\r\nborder-radius: 5px;\r\n`;\r\n\r\nexport const Forms = styled.form`\r\npadding : 20px 20px;\r\ndisplay: flex;\r\nflex-wrap: wrap;\r\nflex-direction: column;\r\n`;\r\n\r\nexport const Label = styled.label`\r\ndisplay: flex;\r\nflex-wrap: wrap;\r\nflex-direction: column;\r\nfont-size: 20px;\r\nfont-weight: 500;\r\n\r\n`;\r\n\r\nexport const Input = styled.input`\r\nmargin: 10px 0px;\r\nmargin-bottom: 30px;\r\nfont-size: 20px;\r\nfont-weight: 700;\r\nwidth: 300px;\r\nborder: 2px solid black;\r\n\r\n&:focus {\r\n    outline: 3px solid blue;\r\n    \r\n}\r\n`;\r\n\r\nexport const Button = styled.button`\r\nfont-size: 14px;\r\nfont-weight: 700;\r\nheight: 40px;\r\nwidth: 200px;\r\nborder-radius: 5px;\r\nbackground-color: #00FF00;\r\n`;","import React, { Component } from 'react';\r\nimport {FormSection, Forms, Input, Button, Label} from './Form.styled'\r\n\r\nclass Form extends Component {\r\n    state = {\r\n        contacts: [],\r\n        name: '',\r\n        number: ''\r\n    }\r\n\r\n    setForm = (e) => {\r\n        const { name, value } = e.currentTarget;\r\n        this.setState({\r\n            [name]: value,\r\n        })\r\n    }\r\n\r\n    handelSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.getValue(this.state);\r\n        this.resetForm();\r\n    }\r\n\r\n    resetForm = () => {\r\n        this.setState({name: '', number: ''})\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <FormSection>\r\n            <Forms onSubmit={this.handelSubmit}>\r\n                <Label>\r\n                Name\r\n                    <Input\r\n                        type=\"text\"\r\n                        name=\"name\"\r\n                        value={this.state.name}\r\n                        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n                        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n                        onChange={this.setForm}\r\n                        required\r\n                    />\r\n                </Label>\r\n                <Label>\r\n                Number\r\n                    <Input\r\n                        type=\"tel\"\r\n                        name=\"number\"\r\n                        value={this.state.number}\r\n                        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n                        title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n                        onChange={this.setForm}\r\n                        required\r\n                    />\r\n                </Label>\r\n                <Button type=\"submit\">Add contact</Button>\r\n            </Forms>\r\n    </FormSection >\r\n        )\r\n\r\n    }\r\n}\r\n\r\nexport default Form;\r\n","import styled from '@emotion/styled';\r\n\r\nexport const Label = styled.label`\r\ndisplay: flex;\r\nflex-wrap: wrap;\r\nflex-direction: column;\r\nfont-weight: 700;\r\nfont-size: 16px;\r\n`;\r\n\r\nexport const Input = styled.input`\r\nmargin: 10px 0px;\r\nmargin-bottom: 30px;\r\nfont-size: 20px;\r\nwidth: 300px;\r\nborder: 2px solid black;\r\n\r\n&:focus {\r\n    outline: 3px solid blue;\r\n}\r\n`;","import React from 'react';\r\nimport { Label, Input } from './Filter.styled';\r\n\r\nconst Filter = ({ filter, onChange }) => (\r\n  <Label>\r\n    Find contacts by name\r\n      <Input\r\n        type=\"text\"\r\n        value={filter}\r\n        onChange={onChange}\r\n      />\r\n  </Label>\r\n);\r\n\r\nexport default Filter;","import styled from '@emotion/styled';\r\n\r\nexport const List = styled.li`\r\ndisplay: flex;\r\nalign-items: center;\r\n`;\r\n\r\nexport const Span = styled.span`\r\nmargin-left: 15px;\r\n`;\r\n\r\nexport const Button = styled.button`\r\nmargin-left: 30px;\r\nfont-size: 14px;\r\nfont-weight: 700;\r\nheight: 20px;\r\nwidth: 100px;\r\nborder-radius: 5px;\r\nbackground-color: red;\r\n`;","import React from 'react';\r\nimport { Button, List, Span } from './ContactList.styled';\r\n\r\nconst ContactList = ({contacts, onDelete}) => (\r\n    <ul>\r\n        {contacts.map((contact) =>\r\n        (<List key={contact.name}><p>{contact.name}: <Span>{contact.number}</Span></p>\r\n            <Button type=\"button\" onClick={()=> onDelete(contact.name)}>Delete</Button>\r\n        </List>))}\r\n    </ul>\r\n);\r\n\r\nexport default ContactList;","import React, { Component } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport { Section } from './App.styled';\nimport Form from '../Form/Form';\nimport Filter from '../Filter/Filter';\nimport ContactList from '../ContactList/ContactList';\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n  };\n\n  componentDidMount() {\n    const contacts = localStorage.getItem('contacts');\n    const parseContacts = JSON.parse(contacts);\n\n    if (parseContacts) {\n      this.setState({ contacts: parseContacts });\n    }\n  }\n\n  componentDidUpdate(prevState, prevProps) {\n    if (this.state.contacts !== prevState.contacts) {\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n    }\n  }\n\n  addContact = ({ name, number }) => {\n    const contact = {\n      id: uuidv4(),\n      name: name,\n      number: number,\n    };\n\n    const searchName = this.state.contacts\n      .map(cont => cont.name)\n      .includes(contact.name);\n\n    const messege = `${contact.name} is already in contacts`;\n\n    if (searchName) {\n      alert(messege);\n    } else {\n      this.setState(({ contacts }) => ({\n        contacts: [contact, ...contacts],\n      }));\n    }\n  };\n\n  deleteContact = contactsName =>\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(\n        contact => contact.name !== contactsName,\n      ),\n    }));\n\n  changeFilter = e => {\n    this.setState({ filter: e.currentTarget.value });\n  };\n\n  getVisibleContact = () => {\n    const normalizeFilter = this.state.filter.toLowerCase();\n\n    return this.state.contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizeFilter),\n    );\n  };\n\n  render() {\n    const visibleContact = this.getVisibleContact();\n    return (\n      <Section>\n        <h1>Phonebook</h1>\n        <Form getValue={this.addContact} />\n        <h2>Contacts</h2>\n        <Filter filter={this.state.filter} onChange={this.changeFilter} />\n        <ContactList contacts={visibleContact} onDelete={this.deleteContact} />\n      </Section>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}